apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus
  namespace: monitoring
  labels:
    app: prometheus
    component: server
spec:
  replicas: 1
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  selector:
    matchLabels:
      app: prometheus
      component: server
  template:
    metadata:
      labels:
        app: prometheus
        component: server
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9090"
    spec:
      serviceAccountName: prometheus-k8s
      securityContext:
        runAsUser: 1000
        runAsGroup: 3000
        fsGroup: 2000 
      containers:
      - name: prometheus
        image: prom/prometheus
        args:
          - '--storage.tsdb.retention.time=6h'
          - '--storage.tsdb.path=/prometheus'
          - '--config.file=/etc/prometheus/prometheus.yml'
        ports:
        - name: web
          containerPort: 9090
        volumeMounts:
        - name: prometheus-config-volume
          mountPath: /etc/prometheus
        - name: prometheus-storage-volume
          mountPath: /prometheus
        securityContext:
          allowPrivilegeEscalation: false
      restartPolicy: Always

      volumes:
      # - name: prometheus-storage-volume
      #   hostPath:
      #     path: /var/local/prometheus
      #     type: DirectoryOrCreate
      
      - name: prometheus-config-volume
        configMap:
            defaultMode: 420
            name: prometheus-config

      - name: prometheus-storage-volume
        persistentVolumeClaim:
            claimName: pvc-data

---

apiVersion: v1
kind: Service
metadata:
    name: prometheus-service
    namespace: monitoring
    annotations:
        prometheus.io/scrape: 'true'
        prometheus.io/port:   '9090'

spec:
    selector:
        app: prometheus
        component: server
    type: NodePort
    ports:
    - port: 8080
      targetPort: 9090 
      nodePort: 30000